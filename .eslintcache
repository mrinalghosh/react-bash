[{"C:\\Users\\mrina\\Desktop\\Projects\\react-bash-navigation\\src\\index.js":"1","C:\\Users\\mrina\\Desktop\\Projects\\react-bash-navigation\\src\\components\\Utils.js":"2","C:\\Users\\mrina\\Desktop\\Projects\\react-bash-navigation\\src\\components\\DraggableDiv.js":"3","C:\\Users\\mrina\\Desktop\\Projects\\react-bash-navigation\\src\\components\\Line.js":"4","C:\\Users\\mrina\\Desktop\\Projects\\react-bash-navigation\\src\\components\\Bar.js":"5","C:\\Users\\mrina\\Desktop\\Projects\\react-bash-navigation\\src\\App.js":"6"},{"size":219,"mtime":1610824433505,"results":"7","hashOfConfig":"8"},{"size":1687,"mtime":1611329461870,"results":"9","hashOfConfig":"8"},{"size":4428,"mtime":1611256707947,"results":"10","hashOfConfig":"8"},{"size":4509,"mtime":1621208682553,"results":"11","hashOfConfig":"8"},{"size":1805,"mtime":1611255815086,"results":"12","hashOfConfig":"8"},{"size":2095,"mtime":1621104179287,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ejxa9p",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"C:\\Users\\mrina\\Desktop\\Projects\\react-bash-navigation\\src\\index.js",[],"C:\\Users\\mrina\\Desktop\\Projects\\react-bash-navigation\\src\\components\\Utils.js",[],"C:\\Users\\mrina\\Desktop\\Projects\\react-bash-navigation\\src\\components\\DraggableDiv.js",["28"],"import React from 'react';\r\nimport './DraggableDiv.css';\r\nimport { Bar } from './Bar';\r\n\r\nexport default class DraggableDiv extends React.Component {\r\n\r\n    componentDidMount() {\r\n        initDragElement();\r\n        initResizeElement();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            < div class=\"popup\" >\r\n                <div class=\"popup-header\">\r\n                    {this.props.children.find(({ type }) => type === Bar)}\r\n                </div>\r\n                <div class=\"popup-body\">\r\n                    {this.props.children.find(({ type }) => type !== Bar)}\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nfunction initDragElement() {\r\n    var pos1 = 0,\r\n        pos2 = 0,\r\n        pos3 = 0,\r\n        pos4 = 0;\r\n    var popups = document.getElementsByClassName(\"popup\");\r\n    var elmnt = null;\r\n    var currentZIndex = 100; //TODO reset z index when a threshold is passed\r\n\r\n    for (let i = 0; i < popups.length; i++) {\r\n        var popup = popups[i];\r\n        var header = getHeader(popup);\r\n\r\n        popup.onmousedown = function () {\r\n            this.style.zIndex = \"\" + ++currentZIndex;\r\n        };\r\n\r\n        if (header) {\r\n            header.parentPopup = popup;\r\n            header.onmousedown = dragMouseDown;\r\n        }\r\n    }\r\n\r\n    function dragMouseDown(e) {\r\n        elmnt = this.parentPopup;\r\n        elmnt.style.zIndex = \"\" + ++currentZIndex;\r\n\r\n        e = e || window.event;\r\n        // get the mouse cursor position at startup:\r\n        pos3 = e.clientX;\r\n        pos4 = e.clientY;\r\n        document.onmouseup = closeDragElement;\r\n        // call a function whenever the cursor moves:\r\n        document.onmousemove = elementDrag;\r\n    }\r\n\r\n    function elementDrag(e) {\r\n        if (!elmnt) {\r\n            return;\r\n        }\r\n\r\n        e = e || window.event;\r\n        // calculate the new cursor position:\r\n        pos1 = pos3 - e.clientX;\r\n        pos2 = pos4 - e.clientY;\r\n        pos3 = e.clientX;\r\n        pos4 = e.clientY;\r\n        // set the element's new position:\r\n        elmnt.style.top = elmnt.offsetTop - pos2 + \"px\";\r\n        elmnt.style.left = elmnt.offsetLeft - pos1 + \"px\";\r\n    }\r\n\r\n    function closeDragElement() {\r\n        /* stop moving when mouse button is released:*/\r\n        document.onmouseup = null;\r\n        document.onmousemove = null;\r\n    }\r\n\r\n    function getHeader(element) {\r\n        var headerItems = element.getElementsByClassName(\"popup-header\");\r\n\r\n        if (headerItems.length === 1) {\r\n            return headerItems[0];\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction initResizeElement() {\r\n    var popups = document.getElementsByClassName(\"popup\");\r\n    var element = null;\r\n    var startX, startY, startWidth, startHeight;\r\n\r\n    for (let i = 0; i < popups.length; i++) {\r\n        var p = popups[i];\r\n\r\n        var right = document.createElement(\"div\");\r\n        right.className = \"resizer-right\";\r\n        p.appendChild(right);\r\n        right.addEventListener(\"mousedown\", initDrag, false);\r\n        right.parentPopup = p;\r\n\r\n        var bottom = document.createElement(\"div\");\r\n        bottom.className = \"resizer-bottom\";\r\n        p.appendChild(bottom);\r\n        bottom.addEventListener(\"mousedown\", initDrag, false);\r\n        bottom.parentPopup = p;\r\n\r\n        var both = document.createElement(\"div\");\r\n        both.className = \"resizer-both\";\r\n        p.appendChild(both);\r\n        both.addEventListener(\"mousedown\", initDrag, false);\r\n        both.parentPopup = p;\r\n    }\r\n\r\n    function initDrag(e) {\r\n        element = this.parentPopup;\r\n\r\n        startX = e.clientX;\r\n        startY = e.clientY;\r\n        startWidth = parseInt(\r\n            document.defaultView.getComputedStyle(element).width,\r\n            10\r\n        );\r\n        startHeight = parseInt(\r\n            document.defaultView.getComputedStyle(element).height,\r\n            10\r\n        );\r\n        document.documentElement.addEventListener(\"mousemove\", doDrag, false);\r\n        document.documentElement.addEventListener(\"mouseup\", stopDrag, false);\r\n    }\r\n\r\n    function doDrag(e) {\r\n        element.style.width = startWidth + e.clientX - startX + \"px\";\r\n        element.style.height = startHeight + e.clientY - startY + \"px\";\r\n    }\r\n\r\n    function stopDrag() {\r\n        document.documentElement.removeEventListener(\"mousemove\", doDrag, false);\r\n        document.documentElement.removeEventListener(\"mouseup\", stopDrag, false);\r\n    }\r\n}\r\n","C:\\Users\\mrina\\Desktop\\Projects\\react-bash-navigation\\src\\components\\Line.js",[],"C:\\Users\\mrina\\Desktop\\Projects\\react-bash-navigation\\src\\components\\Bar.js",[],"C:\\Users\\mrina\\Desktop\\Projects\\react-bash-navigation\\src\\App.js",["29","30","31","32","33"],"\n/* TODO:\n1. fix directories not changing\n2. fix scrollbar not changing when resized\n3. add echo,... commands... - see implementation in react-console-emulator\n4. minimization\n5. closing\n6. icon to open again\n\n\nMINOR:\nfix spacing on left side of box\n*/\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { MuiThemeProvider, Input } from '@material-ui/core';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { pageDirectory, theme } from './components/Utils';\nimport Terminal from './components/Terminal'\n// import Terminal from 'react-console-emulator';\n\n\nconst NotFound = () => <h1 style={{ color: 'white' }}>404</h1>; // THE CAPITAL LETTER MATTERS\nconst NatoPage = (name) => <h1 style={{ color: 'white' }}>{name}</h1>;\n\nfunction App() {\n  const [command, setCommand] = useState('')\n  const [text, setText] = useState('')\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className=\"App\" style={{ overflow: 'hidden', display: 'flex', flexWrap: 'wrap', justifyContent: 'center', alignItems: '', height: '100vh', flexDirection: 'column' }}>\n        <Router>\n          <Switch>\n            {/* Remove terminal from here once done testing */}\n            <Route exact path='/' component={Terminal} />\n            {\n              pageDirectory.map(({ name, path }, key) =>\n                <Route exact path={path} component={() => NatoPage(name)} key={key} />\n              )\n            }\n            <Route path='/terminal' component={Terminal} />\n            <Route path='*'>\n              <Redirect to='/not-found' />\n              <NotFound />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    </MuiThemeProvider>\n  );\n\n  // const commands = {\n  //   echo: {\n  //     description: 'Echo a passed string.',\n  //     usage: 'echo <string>',\n  //     fn: (...args) => args.join(' ')\n  //   }\n  // }\n\n  // return (\n  //   <Terminal\n  //     commands={commands}\n  //     welcomeMessage={'Welcome to the React terminal!'}\n  //     promptLabel={'user@ghoshm:~$'}\n  //   />\n  // )\n\n}\n\nexport default App;\n",{"ruleId":"34","severity":1,"message":"35","line":39,"column":29,"nodeType":"36","messageId":"37","endLine":41,"endColumn":10},{"ruleId":"38","severity":1,"message":"39","line":17,"column":28,"nodeType":"40","messageId":"41","endLine":17,"endColumn":33},{"ruleId":"38","severity":1,"message":"42","line":28,"column":10,"nodeType":"40","messageId":"41","endLine":28,"endColumn":17},{"ruleId":"38","severity":1,"message":"43","line":28,"column":19,"nodeType":"40","messageId":"41","endLine":28,"endColumn":29},{"ruleId":"38","severity":1,"message":"44","line":29,"column":10,"nodeType":"40","messageId":"41","endLine":29,"endColumn":14},{"ruleId":"38","severity":1,"message":"45","line":29,"column":16,"nodeType":"40","messageId":"41","endLine":29,"endColumn":23},"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'currentZIndex'.","FunctionExpression","unsafeRefs","no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'command' is assigned a value but never used.","'setCommand' is assigned a value but never used.","'text' is assigned a value but never used.","'setText' is assigned a value but never used."]